import{B as g,d as _,U as n}from"./Utils-CNOZR5Xp.js";/* empty css                 */import C from"./CheckboxAPIdoc-BPAF1Y2I.js";import"./iframe-1IdOgZ-D.js";import"./preload-helper-DLLWEBaG.js";class m extends g{constructor(...e){const{element:s,options:t}=_(e,"input");let a=null,i=null,o=null,l=null;switch(l=s.parentNode,s?.nodeName){case"INPUT":a=s;break;case"LABEL":i=s,a=i.querySelector("input")||document.createElement("input");break;default:o=s,a=o.querySelector("input")||document.createElement("input");break}const c=t.disabled?"#808080":t.theme||"var(--color-yellow-500)";super(a,c),this.UItype="Checkbox",this.options={...this._defaultOptions,...t},this.defaultTheme=t.theme||c,this.inputValue=this._defineInputValue(this.options.style,this.options.title,this.options.value).inputValue,this.label=this._createLabelGroup(i,this.options?.style),this.name=this._elem.name||this.options.name||null,this.container=this._createContainerGroup(o,this.label),this.originParent=l,l&&l.appendChild(this.container),this.activeImg=this._toggleImg(this.options.style,this.options.checked),this.options.handlers&&(this.handlers=this.options.handlers),this.onChange=this._onChange.bind(this),this._init()}get _defaultOptions(){return{style:"default",title:"",value:"",checked:!0,theme:"var(--color-yellow-500)",checkImg:null,classes:["checkbox"],disabled:!1}}_init(){this.render(),this._bindEvents()}render(){switch(this._elem.type="checkbox",this._elem.checked=this.options.checked,this._elem.value=this.inputValue,n.addClass(this._elem,this.options.classes),n.setAttribute(this._elem,"checkstyle",this.options.style||"default"),n.setProperty(this.label,"--themeColor",this._theme),this.options.style){case"switch":n.addClass(this.label,["label"]);let e=document.createTextNode(this._defineInputValue(this.options.style,this.options.title,this.options.value).displayText);this.label.replaceChild(e,this.label.childNodes[1]);break;case"toggle":n.setProperty(this.label,"--toggle-img",`url(${this.activeImg})`);break;case"tag":n.addClass(this.label,["input-label","input-tag-group"]),n.addClass(this._elem,["tag-input"]);break}this.options.disabled?(n.addClass(this._elem,["disabled"]),this._elem.setAttribute("disabled",!0)):(n.removeClass(this._elem,["disabled"]),this._elem.removeAttribute("disabled"))}_createLabelGroup(e,s){let t=e||document.createElement("label");const a=s||"default";if(t.appendChild(this._elem),this.options.title&&a!=="toggle"){let i=document.createTextNode(this.options.title);t.appendChild(i)}return t}_createContainerGroup(e,s){return e?(e.appendChild(s),e):s}_toggleImg(e,s){if(e!=="toggle")return;let t=s?0:1;return this.options.checkImg[t]}_defineInputValue(e,s,t){let a=s,i=t||s,o=this.options.checked?0:1;if(e==="switch"){const l=s.trim().split("|"),c=t?t.trim().split("|"):l;console.log(c),a=l[o]||a||"",i=c[o]||a||" "}else i=this.options.checked?i:"";return{displayText:a,inputValue:i}}getChecked(){return this.options.checked}setChecked(e){this.options.checked=e,this._applyUpdate()}getValue(){return this.inputValue}setValue(e){this.inputValue=e,this._applyUpdate()}changeTheme(e){if(this.options.disabled){console.error("請將disabled設定為false");return}super.setTheme(e),this._applyUpdate()}setDisabled(e){this.options.disabled=e,this._applyUpdate()}_onChange(e){this.options.checked=e.target.checked,this.handlers&&this.handlers(this.options.checked),this._applyUpdate()}_bindEvents(){this.onevent(this._elem,"change",this.onChange)}_applyUpdate(){this._elem.checked=this.options.checked,this._elem.value=this.inputValue,this._elem.disabled=this.options.disabled,this.options.style==="toggle"&&(this.activeImg=this._toggleImg("toggle",this.options.checked)),this.inputValue=this._defineInputValue(this.options.style,this.options.title,this.options.value).inputValue,this.render()}}class v extends g{constructor(e,s){let t=s||document.createElement("ul");super(t),this.UItype="CheckboxGroup",this.groupContainer=this._elem,this.groupName=e,this.items=[],this._init()}_init(){this.render()}render(){this.groupContainer.className="checkbox-group w-full grid grid-cols-2"}getValue(e){if(e){let s={};for(let t of this.items){if(!t.name||t.name!==e)break;s.name=t.name,s.value=t.getValue()}return s}else{let s=[];for(let t of this.items){let a={};a.name=t.name,a.value=t.getValue(),s.push(a)}return s}}addCheckItems(e){if(Array.isArray(e)){this.items=[...this.items,...e];for(let t of e){let a=document.createElement("li");a.classList.add("item"),a.appendChild(t.container),this._elem.appendChild(a)}}else{this.items=[...this.items,e];let t=document.createElement("li");t.classList.add("item"),t.appendChild(e.container),this._elem.appendChild(t)}}}const x=({checked:r,classes:e,disabled:s,style:t,name:a,theme:i,title:o,checkImg:l,value:c,handlers:b,checkboxGroup:y})=>{let f={checked:r,value:c,name:a,classes:e,disabled:s,style:t,theme:i,title:o,checkImg:l,handlers:b},h=new m(f);if(h.getElem().addEventListener("change",u=>{const d={checked:u.target.checked,value:u.target.value};h.options.handlers?.(d)}),y){let u=new v("test"),d=new m({checked:r,name:"group2",classes:e,disabled:s,style:t,theme:"#69bbe5",title:"群組勾選框A",checkImg:l}),k=new m({checked:r,name:"group3",classes:e,disabled:!0,style:t,theme:"#c4729b",title:"群組勾選框B",checkImg:l});return u.addCheckItems([h,d,k]),u}return h},{fn:U,expect:A}=__STORYBOOK_MODULE_TEST__,{action:O}=__STORYBOOK_MODULE_ACTIONS__,B={title:"Components/Checkbox",tags:["autodocs"],parameters:{docs:{source:{format:!0,language:"html"},page:C}},render:({...r})=>{let e=x({...r});return e.UItype==="Checkbox"?e.container:e.groupContainer},argTypes:{checked:{control:"boolean",description:"checked狀態",table:{category:"options parameter",readOnly:!0,defaultValue:{summary:"false"},type:{summary:"boolean"}}},value:{control:"text",description:"`<input/>`的 value 值，如果沒有特別設定則是直接套用`title`的值",table:{category:"options parameter",defaultValue:{summary:"null"},type:{summary:"string | number"}}},name:{control:"text",description:"input標籤的name attribute",table:{category:"options parameter",type:{summary:"string"}}},theme:{control:"color",description:"色系控制，可以傳入HEX色碼",table:{category:"options parameter",subcategory:"Inherits BaseComponent",type:{summary:"string"}}},checkImg:{control:"select",options:["眼睛組合","愛心組合","信封組合"],mapping:{眼睛組合:["../../../../public/eye.svg","../../../../public/eye-off.svg"],愛心組合:["../../../../public/heart.svg","../../../../public/heart-off.svg"],信封組合:["../../../../public/envelope.svg","../../../../public/envelope-open.svg"]},if:{arg:"style",eq:"toggle"},description:"[僅限toggle樣式更改] 更換為自訂圖標，傳入自訂圖標檔案路徑，以陣列傳入",table:{category:"options parameter",defaultValue:{summary:"eye"},type:{summary:"[./path/img.png,./path/img2.png]"}}},classes:{control:{type:"array"},description:"checkbox classes，每個class以tailwindcss property放入",table:{category:"options parameter",defaultValue:{summary:"checkbox"},type:{summary:"array"}}},disabled:{control:{type:"boolean"},description:"是否可操作狀態(要注意和checked是不同意義)",table:{category:"options parameter",defaultValue:{summary:"false"},type:{summary:"boolean"}}},title:{control:{type:"text"},if:{arg:"style",neq:"toggle"},description:"`<label/>`文字內容，當style為toggle時則不會顯示",table:{category:"options parameter",defaultValue:{summary:"null"},type:{summary:"string"}}},style:{control:"select",options:["default","switch","toggle","tag"],description:"樣式類型",table:{category:"options parameter",defaultValue:{summary:"default"},type:{summary:"string"}}},handlers:{action:"change",control:"function",description:"作為change事件函式傳入",table:{category:"options parameter",defaultValue:{summary:"null"},type:{summary:"function"}}}},args:{checkboxGroup:!1}},p={args:{name:"testing",style:"default",title:"一般勾選框",value:"default",checked:!0,theme:"#61d45b",checkImg:["/eye.svg","/eye-off.svg"],classes:["checkbox"],disabled:!1}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  args: {
    name: "testing",
    //name attribute
    style: "default",
    //樣式
    title: "一般勾選框",
    //文字
    value: "default",
    //<input/>的value attribute
    checked: true,
    theme: "#61d45b",
    //預設顏色
    checkImg: ["/eye.svg", "/eye-off.svg"],
    //check圖標
    classes: ["checkbox"],
    disabled: false
  }
  // play: async ({ args, canvas, userEvent }) => {
  //   await userEvent.type(canvas.getByText('一般勾選框'), '勾選框');
  //   await userEvent.click(canvas.getByLabelText('一般勾選框'));
  //   await expect(args.handlers).toHaveBeenCalled();
  // }
}`,...p.parameters?.docs?.source}}};const L=["defaultCheckbox"];export{L as __namedExportsOrder,B as default,p as defaultCheckbox};
