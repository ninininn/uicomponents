class c{static addClass(e,t){e.classList.add(...t)}static removeClass(e,t){e.classList.remove(...t)}static setText(e,t){e.textContent=t}static setAttribute(e,t,s){e.setAttribute(`data-${t}`,s)}static setProperty(e,t,s){e.style.setProperty(t,s)}}function h(r,e="div"){let t,s={};return r[0]instanceof HTMLElement?(t=r[0],s=r[1]||{}):(t=document.createElement(e),s=r[0]||{}),{element:t,options:s}}class d{constructor(e,t){this._elem=e,this._theme=t,this._eventListeners=[]}_init(){this.render()}render(){}onevent(e,t,s){let n={target:e,event:t,handler:s};this._eventListeners.filter(i=>i.event===t&&i.target===e).length===0&&(e.addEventListener(t,s),this._eventListeners.push(n))}offevent(e,t,s){this._eventListeners=this._eventListeners.filter(n=>{const o=n.target===e&&n.event===t&&n.handler===s;return o&&n.target.removeEventListener(n.event,n.handler),!o})}destroy(){this._eventListeners.forEach(({target:e,event:t,handler:s})=>{e.removeEventListener(t,s)}),this._eventListeners=[]}getElem(){return this._elem}setTheme(e){this._theme=e,this.render()}}function l(r){let e=r;const t=new Set;function s(){return e}function n(i){e=i;for(const a of t)a(e)}function o(i){return t.add(i),i(e),()=>t.delete(i)}return[s,n,o]}export{d as B,c as U,l as b,h as d};
